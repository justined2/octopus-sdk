import{P as l}from"./ProgressBar-Du9DcDQS.js";import{d as c,m,H as o,Q as i,n as u,_ as h,r as y,o as f,c as P,f as s,t as p,g}from"./index.js";import{d as T}from"./displayMethods-CzaGbBDz.js";const _=c({name:"PodcastPlayBar",components:{ProgressBar:l},mixins:[T],props:{podcastId:{default:void 0,type:Number},duration:{default:0,type:Number}},computed:{...m(o,["playerPodcast","playerElapsed","playerTotal"]),percentProgress(){return this.podcastId!==this.playerPodcast?.podcastId?0:this.playerElapsed?this.playerElapsed*100:0},playedTime(){return this.podcastId===this.playerPodcast?.podcastId&&this.playerElapsed&&this.playerElapsed>0&&this.playerTotal&&this.playerTotal>0?i.formatDuration(Math.round(this.playerElapsed*this.playerTotal)):"00:00"},totalTime(){return i.formatDuration(Math.round(this.duration/1e3))}},methods:{...u(o,["playerUpdateSeekTime"]),seekTo(e){if(!this.playerPodcast||this.podcastId!==this.playerPodcast.podcastId)return;const a=e.currentTarget.getBoundingClientRect(),r=e.currentTarget.clientWidth,t=(e.clientX-a.left)/r;t*100>=this.percentLiveProgress||this.playerUpdateSeekTime(this.playerTotal*t)}}}),B={class:"d-flex align-items-center podcast-play-bar"},E={class:"me-2"},I={class:"position-relative flex-grow-1"},k={class:"ms-2"};function v(e,a,r,n,t,M){const d=y("ProgressBar");return f(),P("div",B,[s("div",E,p(e.playedTime),1),s("div",I,[g(d,{"main-progress":e.percentProgress,class:"medium",onMouseup:e.seekTo},null,8,["main-progress","onMouseup"])]),s("div",k,p(e.totalTime),1)])}const D=h(_,[["render",v]]);export{D as default};
